#!/usr/bin/env python3

import pprint
import argparse
from termcolor import colored,cprint
import os
import xml.etree.ElementTree as et
import sys

def main():
	### Set up arguments
	parser = argparse.ArgumentParser("Prints out a list of targets for nmap or EyeWitness")
	parser.add_argument('--eyewitness', dest='eyewitness', \
		action='store_true', help='Prepares a list to be used with EyeWitness')
	parser.add_argument('--nmap', dest='nmap', action='store_true', \
		help='Prepares a list to used with nmap.')
	parser.add_argument('-i', '--input', dest='infile', \
		help='File to process for list.', required=True)
	parser.add_argument('-s', '--sort', dest='sort', \
		action='store_true', help='Sort the output by IP.')
	if len(sys.argv)==1:
		parser.print_help(sys.stderr)
		sys.exit(1)
	args = parser.parse_args()

	if os.path.exists(args.infile):
		try:
			os.path.getsize(args.infile)
		except OSError as err:
			raise colored(err, "red")
		tree = et.parse(args.infile)
		root = tree.getroot()
		addrs = []
		for a in root.iter('address'):
			addr = a.get('addr')
			if addr not in addrs:
				addrs.append(addr)
		# sort th list()
		# output for specified format
		if args.sort:
			addrs = sorted(addrs, key=lambda ip: \
									(int(ip.split(".")[0]), 
									int(ip.split('.')[1]),
									int(ip.split('.')[2]),
									int(ip.split('.')[3])))
		for addr in addrs:
			if args.eyewitness:
				print("http://{}/".format(addr))
			elif args.nmap:
				print(addr)
			else:
				# specify an output style
				cprint("Specify an output style and try again.", "yellow")
				parser.print_help()
				sys.exit(1)
			
	else:
		raise Exception(colored("Couldn't file input file ({}).".format(args.infile), "red"))

if __name__=='__main__':
	main()

